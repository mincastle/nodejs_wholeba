var mysql = require('mysql');
var db_config = require('./db_config');
var async = require('async');

var pool = mysql.createPool(db_config);

/*
 회원가입
 내 번호가 이미 커플의 인증번호에 있으면 커플을 이어주고 유저생성,
 없으면 새로운 커플과 유저를 생성
 count(couple의 auth_phone == user_phone)
 insert into couple -> insert into user
 or update couple -> insert into user
 */

exports.join = function (data, callback) {

  pool.getConnection(function(err, conn) {
    if(err) {
      console.log('err', err);
      callback(err, null);
    } else {
      //console.log('conn', conn);
      var sql = 'select couple_no, count(*) as cnt from couple where auth_phone=? and couple_is = 0;';
      conn.query(sql, [data[2]], function(err, row) {
        if(err) {
          console.log('err', err);
          callback(err, null);
        } else {
          console.log('row', row);
          //callback(null, row[0]);

          //count == 0이면 커플생성 후 유저생성
          if(row[0].cnt == 0) {
            sql = 'insert into couple values();';
            conn.query(sql, [], function(err, row) {
              if(err) {
                console.log('err', err);
                callback(err, null);
              } else {
                console.log('row', row);
                data.push(row.insertId);  //커플번호를 맨 마지막에 추가
                //user 생성
                sql = 'insert into user(user_id, user_pw, user_phone, user_regid, couple_no) values(?, ?, ?, ?, ?)';
                conn.query(sql, data, function(err, row) {
                  if(err) {
                    console.log('err', err);
                    callback(err, null);
                  } else {
                    console.log('row', row);
                    callback(null, row);
                  }
                });
              }
            });
          }

          //count == 1이면 couple_no로 유저생성
          else if(row[0].cnt == 1) {
            sql = 'insert into user(user_id, user_pw, user_phone, user_regid, couple_no) values(?, ?, ?, ?, ?);';
            data.push(row[0].couple_no);  //커플번호 맨 마지막에 추가
            conn.query(sql, data, function(err, row) {
              if(err) {
                console.log('err', err);
                callback(err, null);
              } else {
                console.log('row', row);
                callback(null, row);
              }
            });

          } else {
            //같은 번호가 두개이상
            throw err('phone number duplication error : ' + row[0].cnt);
          }
        }
      })
    }
  });
  //var success = 1;
  //callback(success);
};